{"version":3,"sources":["Components/AddTaskForm.jsx","Components/EditTodo.jsx","Components/SortTasks.jsx","Components/Task.jsx","Components/NoTodo.jsx","Components/Sort.jsx","Components/Tasks.jsx","App.js","index.js"],"names":["AddTaskForm","addTodo","useState","name","setName","date","setDate","reminder","setReminder","completed","SnackBar","setSnackBar","classes","makeStyles","theme","formPaper","padding","spacing","margin","widthStrech","width","textTransform","h5","fontWeight","color","palette","secondary","main","Snackbar","backgroundColor","error","useStyles","Paper","className","variant","Grid","container","direction","item","Typography","TextField","onChange","e","target","value","label","placeholder","type","InputLabelProps","shrink","FormControlLabel","control","Checkbox","currentTarget","checked","Button","onClick","preventDefault","setTimeout","disableElevation","ContentProps","anchorOrigin","vertical","horizontal","open","message","TransitionComponent","props","Slide","EditTodo","openEdit","editValue","setEditValue","setOpenEdit","Todo","setTodo","editableObjct","dialog","btns","marginTop","btnMargin","marginLeft","input","useTheme","isFullScreen","useMediaQuery","breakpoints","down","Dialog","fullScreen","aria-labelledby","fullWidth","DialogTitle","id","DialogContent","map","todo","SortTasks","Class","sortTodos","React","setValue","Tabs","event","newValue","indicatorColor","textColor","Tab","toDoObject","todoHeading","Task","deleteTodo","completeTodo","editTodo","paper","transition","position","cursor","success","light","paddingRight","marginInline","deleteBtn","border","display","completeBtn","editBtn","marginBottom","icons","before","content","left","top","height","primary","borderTopLeftRadius","borderBottomLeftRadius","hideDone","completeIcon","deleteIcon","editIcon","marginRight","alignToRight","justifyContent","onDoubleClick","alignItems","justify","lg","sm","xs","ButtonGroup","size","startIcon","Chip","NoTodo","noTodo","opacity","DropDownItem","itemText","clickFunc","funcArg","ListIcon","ListItem","button","ListItemIcon","ListItemText","SortList","cls","sortTodosPer","List","DateRangeIcon","AddAlertIcon","CheckCircleIcon","Sort","sortString","forceUpdate","isOpen","setIsOpen","sortPaper","sort","borderRadius","sortTypo","fontSize","todoCount","sortIcon","sortList","maxWidth","right","zIndex","length","s","a","b","Date","Tasks","toDos","useReducer","x","tasksPaper","maxHeight","minHeight","up","overflowY","sortTasks","App","setEditableObjct","setSort","toDo","filter","appPaper","noteTypo","hideCaption","Container","component","CssBaseline","newTodoData","Math","floor","random","newTodo","obj","createMuiTheme","lightBlue","blueGrey","green","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.5cea3b51.chunk.js","sourcesContent":["import { Button, Checkbox, FormControlLabel, Grid,\r\n     makeStyles, Paper, Slide, Snackbar, TextField, Typography } from '@material-ui/core'\r\n\r\nimport React, { useState } from 'react'\r\n\r\nconst AddTaskForm = ({addTodo}) => {\r\n\r\n    const [name , setName] = useState('')\r\n    const [date , setDate] = useState('')\r\n    const [reminder , setReminder] = useState(false)\r\n    const [completed , setCompleted] = useState(false)\r\n    const [SnackBar , setSnackBar] = useState(false)\r\n\r\n    const submitTask = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!name || !date) {\r\n            setSnackBar(true)\r\n            setTimeout(() => setSnackBar(false), 3000)\r\n            return\r\n        }\r\n        addTodo({ name, date, reminder, completed })\r\n        setSnackBar(false)\r\n        setName('')\r\n        setDate('')\r\n        setReminder(false)\r\n  }\r\n\r\n    function SlideTransition(props) {\r\n        return <Slide {...props} direction=\"right\" />;\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        formPaper: {\r\n            padding: theme.spacing(2),\r\n            margin: theme.spacing(2, 0)\r\n        },\r\n        widthStrech: {\r\n            margin: theme.spacing(1.5, 0),\r\n            width: '100%',\r\n            textTransform: 'capitalize'\r\n        },\r\n        h5: {\r\n            margin: theme.spacing(2, 0, 2, 2),\r\n            fontWeight: 600,\r\n            color: theme.palette.secondary.main\r\n        },\r\n        Snackbar: {backgroundColor: theme.palette.error.main}\r\n    }))\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper className={classes.formPaper} variant='outlined'>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Typography className={classes.h5} variant='h5'>Add Todo</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField onChange={(e) => setName(e.target.value)} value={name} className={classes.widthStrech} label=\"Todo\" placeholder=\"ex : Workout 30 minutes\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField \r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        value={date}\r\n                        className={classes.widthStrech}\r\n                        label=\"Todo Date & Time\"\r\n                        type=\"datetime-local\"\r\n                        InputLabelProps={{shrink: true}}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControlLabel className={classes.widthStrech} control={<Checkbox onChange={(e) => setReminder(e.currentTarget.checked)} checked={reminder} value={reminder} color='primary' />} label=\"Set Reminder\"/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button onClick={submitTask} color='primary' variant='contained' className={classes.widthStrech} disableElevation>Add Todo</Button>\r\n                    <Snackbar\r\n                        ContentProps={{className: classes.Snackbar}}\r\n                        anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\r\n                        open={SnackBar}\r\n                        message=\"Please Add A Todo & Date\"\r\n                        TransitionComponent={SlideTransition}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default AddTaskForm\r\n","import { Button, Dialog, DialogContent, DialogTitle, Grid, makeStyles, Snackbar, TextField, useMediaQuery } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport React, { useState } from 'react'\r\n\r\nconst EditTodo = ({openEdit, editValue, setEditValue, setOpenEdit,Todo , setTodo, editableObjct}) => {\r\n    const [SnackBar, setSnackBar] = useState(false)\r\n    const handleClick = () => {\r\n        setEditValue(editValue)\r\n        if(editValue==='') {\r\n            setSnackBar(true);\r\n            setTimeout(() => setSnackBar(false), 2000);\r\n            return\r\n        }\r\n        setOpenEdit(false)\r\n        setTodo(Todo.map((todo) => todo.id===editableObjct.id ? { ...todo, name: editValue} : todo))\r\n    }\r\n    const handleCloseDialog = () => {\r\n        setOpenEdit(false)\r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        dialog: {padding: theme.spacing(2)},\r\n        btns: {marginTop: theme.spacing(2)},\r\n        btnMargin: {marginLeft: theme.spacing(1)},\r\n        input: {width: '100%'},\r\n        Snackbar: {backgroundColor: theme.palette.error.main}\r\n    }))\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const isFullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n    return (\r\n        <Dialog\r\n          open={openEdit}\r\n          fullScreen={isFullScreen}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n          fullWidth\r\n          >\r\n            <DialogTitle id=\"responsive-dialog-title\">Edit Todo</DialogTitle>\r\n            <DialogContent className={classes.dialog}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item>\r\n                        <TextField\r\n                        onChange={(e) => setEditValue(e.target.value)}\r\n                        value={editValue} label=\"Todo\"\r\n                        className={classes.input}\r\n                        variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={classes.btns}>\r\n                            <Button onClick={handleClick} color='primary' variant=\"contained\" disableElevation>Finish</Button>\r\n                            <Button className={classes.btnMargin} onClick={handleCloseDialog} color='secondary' variant=\"contained\" disableElevation>Cancel</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <Snackbar\r\n                ContentProps={{className: classes.Snackbar}}\r\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\r\n                open={SnackBar}\r\n                message=\"Todos Name Cannot Be Empty\"\r\n                className={classes.Snackbar}\r\n            />\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditTodo\r\n","import { makeStyles, Paper, Tab, Tabs } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst SortTasks = ({Class, sortTodos}) => {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Paper className={Class} variant='outlined'>\r\n            <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" indicatorColor=\"primary\" textColor=\"primary\">\r\n                <Tab name='1' onClick={() => sortTodos('All')} label=\"All\"></Tab>\r\n                <Tab name='2' onClick={() => sortTodos('Doing')} label=\"Doing\"></Tab>\r\n                <Tab name='3' onClick={() => sortTodos('Complete')} label=\"Complete\"></Tab>\r\n            </Tabs>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default SortTasks\r\n","import { Button, ButtonGroup, Chip, Grid, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React from 'react'\r\n\r\nconst Todo = ({classes, toDoObject}) => {\r\n    return(\r\n        <Grid container direction='column'>\r\n            <Grid item>\r\n                <Typography className={classes.todoHeading} variant='h6'>{toDoObject.name}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography className={classes.todo} variant='subtitle1'>{toDoObject.date}</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nconst Task = ({toDoObject, deleteTodo, completeTodo, setReminder, editTodo}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          padding: theme.spacing(1.5, 3),\r\n          margin: theme.spacing(1.5),\r\n          transition: '.15s ease-out',\r\n          position: 'relative',\r\n          cursor: 'pointer',\r\n          backgroundColor: !toDoObject.completed ? 'none' : theme.palette.success.light,\r\n          [theme.breakpoints.down('xs')]: {paddingRight: theme.spacing(1),marginInline: 0},\r\n          '&:hover' : {\r\n            backgroundColor: !toDoObject.completed && theme.palette.secondary.light\r\n           }\r\n        },\r\n        deleteBtn: {\r\n            marginLeft: theme.spacing(1),\r\n            border: '1px solid' + theme.palette.error.main,\r\n            color: theme.palette.error.main,\r\n            '&:hover' : {\r\n                backgroundColor: theme.palette.error.main,\r\n                color: 'white'\r\n            },\r\n            [theme.breakpoints.down('sm')]: {display: 'none'}\r\n        },\r\n        completeBtn: {\r\n            border: '1px solid' + theme.palette.success.main,\r\n            color: theme.palette.success.main,\r\n            '&:hover' : {\r\n                backgroundColor: theme.palette.success.main,\r\n                color: 'white'\r\n            },\r\n            [theme.breakpoints.down('sm')]: {display: 'none'}\r\n        },\r\n        editBtn: {\r\n            '&:hover' : {\r\n                backgroundColor: theme.palette.secondary.main,\r\n                color: 'white'\r\n            },\r\n            [theme.breakpoints.down('sm')]: {display: 'none'}\r\n        },\r\n        todo: {\r\n            [theme.breakpoints.down('xs')]: {marginBottom: theme.spacing(1)},\r\n        },\r\n        todoHeading: {\r\n            fontWeight: 600,\r\n            textTransform: 'capitalize'\r\n        },\r\n        icons: {\r\n            display: 'none',\r\n            [theme.breakpoints.down('sm')]: {\r\n                display: 'inline-flex',\r\n                margin: theme.spacing(0, 1)\r\n            }\r\n        },\r\n        before: {\r\n            '&:before': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                left: -1,\r\n                top: -1,\r\n                width: '8px',\r\n                height: '103%',\r\n                backgroundColor: !toDoObject.completed ? theme.palette.primary.main : theme.palette.success.main,\r\n                borderTopLeftRadius: '4px',\r\n                borderBottomLeftRadius: '4px'\r\n            }\r\n        },\r\n        hideDone: {[theme.breakpoints.down('sm')]: {display: 'none'}},\r\n        completeIcon: {color: theme.palette.success.main},\r\n        deleteIcon: {color: theme.palette.error.main},\r\n        editIcon: {color: theme.palette.secondary.main, marginRight: 0},\r\n        alignToRight: {display: 'flex', justifyContent: 'flex-end'}\r\n      }));\r\n      const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Paper onDoubleClick={() => !toDoObject.completed && setReminder(toDoObject.id)} variant=\"outlined\" className={classes.paper}>\r\n                <Grid className={`${toDoObject.reminder ? classes.before : \"\"} `} container alignItems=\"center\" justify=\"flex-start\">\r\n                    <Grid item lg={8} sm={9} xs={10}>\r\n                        <Todo toDoObject={toDoObject} classes={classes} />\r\n                    </Grid>\r\n                    <Grid className={classes.alignToRight} item lg={4} sm={3} xs={2}>\r\n                            <ButtonGroup>\r\n                                {!toDoObject.completed && <Button onClick={() => editTodo(toDoObject)} className={classes.editBtn} color='secondary' size=\"small\" startIcon={<EditIcon />} variant=\"outlined\">Edit</Button>}\r\n                                {!toDoObject.completed && <EditIcon className={`${classes.icons} ${classes.editIcon}`} onClick={() => editTodo(toDoObject)} />}\r\n                                {\r\n                                !toDoObject.completed ? \r\n                                <Button onClick={() => completeTodo(toDoObject.id)} size=\"small\" startIcon={<DoneIcon />} variant=\"outlined\" className={classes.completeBtn}>Complete</Button>\r\n                                : <Chip variant=\"outlined\" label=\"Done\" className={classes.hideDone} />\r\n                                }\r\n                                <Button onClick={() => deleteTodo(toDoObject.id)} size=\"small\" startIcon={<DeleteIcon />} variant=\"outlined\" className={classes.deleteBtn}>Delete</Button>\r\n                            </ButtonGroup>\r\n                            {\r\n                            !toDoObject.completed && <DoneIcon onClick={() => completeTodo(toDoObject.id)} className={`${classes.icons} ${classes.completeIcon}`} />\r\n                            }\r\n                            <DeleteIcon onClick={() => deleteTodo(toDoObject.id)} className={`${classes.icons} ${classes.deleteIcon}`} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import { makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst NoTodo = () => {\r\n    const useStyles = makeStyles(theme => ({\r\n        noTodo: {\r\n            fontWeight: 600,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            marginTop: theme.spacing(1.5),\r\n            opacity: .7\r\n       }\r\n    }))\r\n    const classes = useStyles()\r\n    return (\r\n        <Typography className={classes.noTodo}>\r\n            Todos will show up here when you add them\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default NoTodo\r\n","import React, { useState } from 'react'\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Grid, List, ListItem, ListItemIcon, ListItemText, makeStyles, Paper, Typography } from '@material-ui/core';\r\n\r\n\r\nconst DropDownItem = ({itemText, clickFunc, funcArg, ListIcon}) => {\r\n    return(\r\n        <ListItem button onClick={() => clickFunc(funcArg)}>\r\n            <ListItemIcon>\r\n                <ListIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={itemText} />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nconst SortList = ({cls, sortTodosPer}) => {\r\n    return (\r\n        <List className={cls}>\r\n            <DropDownItem itemText=\"Date\" clickFunc={sortTodosPer} funcArg=\"Date\" ListIcon={DateRangeIcon} />\r\n            <DropDownItem itemText=\"Reminder\" clickFunc={sortTodosPer} funcArg=\"Reminder\" ListIcon={AddAlertIcon} />\r\n            <DropDownItem itemText=\"Completed\" clickFunc={sortTodosPer} funcArg=\"Completed\" ListIcon={CheckCircleIcon} />\r\n        </List>\r\n    )\r\n}\r\n\r\nconst Sort = ({Todo, sortString, forceUpdate}) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const handleSortClick = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n    const sortTodosPer = (s) => {\r\n        if(s==='Date') Todo = Todo.sort((a, b) => new Date(a.date) - new Date(b.date))\r\n        if(s==='Completed') Todo.sort((a, b) => b.completed - a.completed)\r\n        if(s==='Reminder') Todo.sort((a, b) => b.reminder - a.reminder)\r\n        setIsOpen(false)\r\n        forceUpdate() // to update the component after sorting tasks so it displays the sorted tasks\r\n    }\r\n    const useStyles = makeStyles(theme => ({\r\n        sortPaper: {\r\n            margin: theme.spacing(0, 1.5),\r\n            padding: theme.spacing(1, 2),\r\n            [theme.breakpoints.down('xs')]: {margin: 0},\r\n            position: 'relative',\r\n        },\r\n        sort: {\r\n            display: 'flex',\r\n            borderRadius: '4px',\r\n            padding: theme.spacing(0, 1),\r\n            cursor: 'pointer',\r\n            transition: '.1s ease-out',\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.light\r\n            }\r\n        },\r\n        sortTypo: {\r\n            marginRight: theme.spacing(1),\r\n            fontSize: '14px',\r\n            fontWeight: 500,\r\n            marginTop: theme.spacing(.2),\r\n            color: theme.palette.secondary.main\r\n        },\r\n        todoCount: {\r\n            fontWeight: 500,\r\n            color: theme.palette.secondary.main\r\n        },\r\n        sortIcon: {\r\n            color: theme.palette.secondary.main\r\n        },\r\n        sortList: {\r\n            width: '100%',\r\n            maxWidth: 200,\r\n            position: 'absolute',\r\n            right: 0,\r\n            top: 42,\r\n            zIndex: '999',\r\n            backgroundColor: theme.palette.secondary.light,\r\n            borderRadius: '4px',\r\n            display: isOpen ? 'block' : 'none'\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    const length = Todo.length\r\n    return (\r\n        <>\r\n            <Paper className={classes.sortPaper} variant=\"outlined\">\r\n                <Grid container direction=\"row\" justify=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography className={classes.todoCount}>\r\n                            {`${length} ${length===1 || length===0 ? \"Task\" : \"Tasks\"}`} {`${sortString==='Doing' ? 'To Do' : sortString==='Complete' ? 'Completed' : ''}`}\r\n                            </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.sort} onClick={handleSortClick}>\r\n                        <Typography className={classes.sortTypo}>Sort By</Typography>\r\n                        <SortIcon className={classes.sortIcon}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <SortList sortTodosPer={sortTodosPer} cls={classes.sortList} />\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sort\r\n","import { Grid, makeStyles, Paper } from '@material-ui/core'\r\nimport React, { useReducer } from 'react'\r\nimport SortTasks from './SortTasks';\r\nimport Task from './Task';\r\nimport NoTodo from \"./NoTodo\"\r\nimport Sort from './Sort';\r\n\r\n\r\nconst Tasks = ({toDos, sortTodos, deleteTodo, completeTodo, setReminder, editTodo, sortString}) => {\r\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n    const useStyles = makeStyles((theme) => ({\r\n        tasksPaper: {\r\n          padding: theme.spacing(2, 1),\r\n          margin: theme.spacing(2, 0),\r\n          maxHeight: '78vh',\r\n          minHeight: '78vh',\r\n          [theme.breakpoints.up('sm')]: {overflowY: 'auto'},\r\n          [theme.breakpoints.down('sm')]: {\r\n            overflowY: 'auto',\r\n            maxHeight: 'fit-content'\r\n          }\r\n        },\r\n        sortTasks: {\r\n            margin: theme.spacing(1.5),\r\n            [theme.breakpoints.down('xs')]: {marginInline: 0}\r\n        }\r\n      }));\r\n      const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Paper variant=\"outlined\" className={classes.tasksPaper}>\r\n                <Grid container direction='column'>\r\n                    <Grid item>\r\n                        <SortTasks sortTodos={sortTodos} Class={classes.sortTasks} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Sort Todo={toDos} sortString={sortString} forceUpdate={forceUpdate} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {\r\n                            toDos.length > 0 ?\r\n                            toDos.map(todo => {\r\n                                    return(\r\n                                          <Task editTodo={editTodo} setReminder={setReminder} key={todo.id} toDoObject={todo} completeTodo={completeTodo} deleteTodo={deleteTodo} />\r\n                                )\r\n                            }) :\r\n                            <NoTodo />\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { Container, CssBaseline, Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport AddTaskForm from \"./Components/AddTaskForm\";\r\nimport EditTodo from \"./Components/EditTodo\";\r\nimport Tasks from \"./Components/Tasks\";\r\n\r\nfunction App() {\r\n\r\n  const [openEdit, setOpenEdit] = useState(false)\r\n  const [editValue, setEditValue] = useState('')\r\n  const [editableObjct, setEditableObjct] = useState({})\r\n  const editTodo = (obj) => {\r\n      setOpenEdit(true)\r\n      setEditValue(obj.name)\r\n      setEditableObjct(obj)\r\n  }\r\n\r\n  const [Todo, setTodo] = useState([])\r\n\r\n  const [sort, setSort] = useState('All')\r\n\r\n  let toDo = []\r\n\r\n  const sortTodos = (s) => {\r\n    setSort(s)\r\n  }\r\n  \r\n  if(sort === 'All') toDo = Todo;\r\n  else if (sort === 'Doing') toDo = Todo.filter(todo => !todo.completed);\r\n  else if(sort === 'Complete') toDo = Todo.filter(todo => todo.completed);\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodo(Todo.filter((todo) => todo.id!==id))\r\n  }\r\n  const addTodo = (newTodoData) => {\r\n    const id = Math.floor(Math.random() * 1000)\r\n    const newTodo = {id, ...newTodoData}\r\n    setTodo([...Todo, newTodo])\r\n  }\r\n  const completeTodo = (id) => {\r\n    setTodo(Todo.map(todo => todo.id===id ? {...todo, completed: true} : todo))\r\n  }\r\n\r\n  const setReminder = (id) => {\r\n    setTodo(Todo.map(todo => todo.id===id ? {...todo, reminder: !todo.reminder} : todo))\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    appPaper: {\r\n      padding: theme.spacing(1, 3),\r\n      margin: theme.spacing(6, 0),\r\n      [theme.breakpoints.down('xs')]: {padding: theme.spacing(1, 1)}\r\n    },\r\n    noteTypo: {\r\n      opacity: .7,\r\n      fontWeight: 500,\r\n      marginLeft: theme.spacing(2)\r\n    },\r\n    hideCaption: {\r\n      [theme.breakpoints.down('sm')]: {display: 'none'}\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        <CssBaseline>\r\n          <Paper className={classes.appPaper} >\r\n            <Grid  spacing={2} container>\r\n              <Grid lg={4} sm={12} xs={12} item>\r\n                <AddTaskForm addTodo={addTodo} />\r\n                <Typography className={classes.noteTypo + ' ' + classes.hideCaption} variant=\"caption\" >Double Click On Todo To Toggle Reminder</Typography>\r\n              </Grid>\r\n              <Grid lg={8} sm={12} xs={12} item>\r\n                <EditTodo\r\n                editableObjct={editableObjct}\r\n                Todo={Todo}\r\n                setTodo={setTodo}\r\n                editValue={editValue}\r\n                setEditValue={setEditValue}\r\n                openEdit={openEdit}\r\n                setOpenEdit={setOpenEdit}\r\n                />\r\n                <Tasks\r\n                 editTodo={editTodo}\r\n                 setReminder={setReminder}\r\n                 completeTodo={completeTodo}\r\n                 deleteTodo={deleteTodo}\r\n                 sortTodos={sortTodos}\r\n                 toDos={toDo}\r\n                 sortString={sort}\r\n                 />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </CssBaseline>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport { lightBlue, blueGrey, green } from \"@material-ui/core/colors\";\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: lightBlue[700],\r\n      light: lightBlue[50],\r\n    },\r\n    secondary: {\r\n      main: blueGrey[700],\r\n      light: blueGrey[50],\r\n    },\r\n    success: {\r\n      main: green[500],\r\n      light: green[100]\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: 'Raleway'\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}